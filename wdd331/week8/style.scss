//variables to setup basic size and shape of the card and pips
$card-width: 40vw;
$card-height: $card-width * 1.4;
$font-size-number: $card-width * 0.1;
$icon-size: $card-width / 5;

$num-columns: 5;
$num-rows: 4;
$column-width: 1fr;
$row-height: 1fr;

@mixin grid-column($span-num) {
  grid-column: $span-num;
}

@mixin grid-row($offset-num) {
  grid-row: $offset-num;
}

*,
*:before,
*:after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

//styles to draw a basic outline of a card
.card {
  border: 1px solid grey;
  height: $card-height;
  width: $card-width;
  border-radius: 10px;
  margin: 20px;
  box-shadow: 2px 2px 4px grey;
}

//because it is a card front we want a bit of extra padding
.card-front {
  padding: 0.5em;
}

//set icon size
.icon {
  width: $icon-size;
  height: $icon-size;
}

.number {
  text-align: center;
  font-size: $font-size-number;
  //an icon that is part of a number should be half the normal size
  & > .icon {
    width: $icon-size * 0.5;
    height: $icon-size * 0.5;
  }
}

//rotate bottom pips 180deg
.rotate {
  transform: rotate(180deg);
}

.row {
  display: grid;
  width: 100%;
  height: 100%;
  grid-template-columns: 4rem repeat($num-columns - 2, $column-width) 4rem;
  grid-template-rows: repeat($num-rows, $row-height);
  justify-items: center;
}

@for $index from 1 to $num-columns + 1 {
  .grid-col-#{$index} {
    @include grid-column($index);
  }
}

@for $index from 1 to $num-rows + 1 {
  .grid-row-#{$index} {
    @include grid-row($index);
  }
}

@supports (display: grid) {
  $num-columns: 5;
  $column-width: 100% / $num-columns;

  @mixin flex-column($span-num) {
    flex: 0 0 $column-width * $span-num;
  }

  @mixin flex-offset($offset-num) {
    margin-left: $column-width * $offset-num;
  }

  .row {
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    align-content: space-between;
    height: 100%;
  }

  .number {
    display: flex;
    flex-direction: column;   
    align-items: center; 
  }

  @for $index from 1 to 6 {
    .flex-column-#{$index} {
      @include flex-column($index);
    }
  }

  @for $index from 1 to 6 {
    .flex-offset-#{$index} {
      @include flex-offset($index);
    }
  }
}
